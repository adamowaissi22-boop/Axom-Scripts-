local Ropoto = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Theme = {
    Primary = Color3.fromRGB(65, 150, 255),
    Secondary = Color3.fromRGB(45, 45, 55),
    Background = Color3.fromRGB(30, 30, 40),
    Text = Color3.fromRGB(240, 240, 240),
    Accent = Color3.fromRGB(80, 170, 255),
    Success = Color3.fromRGB(65, 255, 135),
    Warning = Color3.fromRGB(255, 185, 65),
    Error = Color3.fromRGB(255, 85, 85),
    Dark = Color3.fromRGB(20, 20, 30)
}

local function CreateShadow(frame)
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.8
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0, -5, 0, -5)
    shadow.Parent = frame
    return shadow
end

local function CreateStroke(frame)
    local stroke = Instance.new("UIStroke")
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Color = Color3.fromRGB(60, 60, 70)
    stroke.Thickness = 1
    stroke.Parent = frame
    return stroke
end

local function CreateCorner(frame, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = radius or UDim.new(0, 6)
    corner.Parent = frame
    return corner
end

local function Tween(obj, props, duration, style)
    local tweenInfo = TweenInfo.new(duration or 0.2, style or Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(obj, tweenInfo, props)
    tween:Play()
    return tween
end

function Ropoto:CreateWindow(name)
    local Window = {}
    Window.Elements = {}
    Window.Connections = {}
    Window.Sections = {}
    Window.CurrentSection = nil
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "RopotoUI"
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    ScreenGui.Parent = game:GetService("CoreGui")
    
    local LoadingFrame = Instance.new("Frame")
    LoadingFrame.Name = "LoadingFrame"
    LoadingFrame.BackgroundColor3 = Theme.Background
    LoadingFrame.BorderSizePixel = 0
    LoadingFrame.Position = UDim2.new(0.5, -100, 0.5, -50)
    LoadingFrame.Size = UDim2.new(0, 200, 0, 100)
    LoadingFrame.ZIndex = 100
    LoadingFrame.Parent = ScreenGui
    
    CreateShadow(LoadingFrame)
    CreateStroke(LoadingFrame)
    CreateCorner(LoadingFrame)
    
    local LoadingTitle = Instance.new("TextLabel")
    LoadingTitle.Name = "LoadingTitle"
    LoadingTitle.BackgroundTransparency = 1
    LoadingTitle.Position = UDim2.new(0, 0, 0, 15)
    LoadingTitle.Size = UDim2.new(1, 0, 0, 25)
    LoadingTitle.Font = Enum.Font.GothamSemibold
    LoadingTitle.Text = "Ropoto UI"
    LoadingTitle.TextColor3 = Theme.Primary
    LoadingTitle.TextSize = 18
    LoadingTitle.ZIndex = 101
    LoadingTitle.Parent = LoadingFrame
    
    local LoadingSubtitle = Instance.new("TextLabel")
    LoadingSubtitle.Name = "LoadingSubtitle"
    LoadingSubtitle.BackgroundTransparency = 1
    LoadingSubtitle.Position = UDim2.new(0, 0, 0, 45)
    LoadingSubtitle.Size = UDim2.new(1, 0, 0, 20)
    LoadingSubtitle.Font = Enum.Font.Gotham
    LoadingSubtitle.Text = "Loading..."
    LoadingSubtitle.TextColor3 = Theme.Text
    LoadingSubtitle.TextSize = 14
    LoadingSubtitle.ZIndex = 101
    LoadingSubtitle.Parent = LoadingFrame
    
    local GameName = Instance.new("TextLabel")
    GameName.Name = "GameName"
    GameName.BackgroundTransparency = 1
    GameName.Position = UDim2.new(0, 0, 0, 70)
    GameName.Size = UDim2.new(1, 0, 0, 20)
    GameName.Font = Enum.Font.Gotham
    GameName.Text = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
    GameName.TextColor3 = Theme.Accent
    GameName.TextSize = 12
    GameName.ZIndex = 101
    GameName.Parent = LoadingFrame
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.BackgroundColor3 = Theme.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
    MainFrame.Size = UDim2.new(0, 0, 0, 0)
    MainFrame.ZIndex = 1
    MainFrame.Visible = false
    MainFrame.Parent = ScreenGui
    
    CreateShadow(MainFrame)
    CreateStroke(MainFrame)
    CreateCorner(MainFrame)
    
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.BackgroundColor3 = Theme.Dark
    TopBar.BorderSizePixel = 0
    TopBar.Size = UDim2.new(1, 0, 0, 40)
    TopBar.ZIndex = 2
    TopBar.Parent = MainFrame
    
    CreateCorner(TopBar, UDim.new(0, 6))
    
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 15, 0, 0)
    Title.Size = UDim2.new(0, 200, 1, 0)
    Title.Font = Enum.Font.GothamSemibold
    Title.Text = name or "Ropoto UI"
    Title.TextColor3 = Theme.Text
    Title.TextSize = 16
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.ZIndex = 3
    Title.Parent = TopBar
    
    local CreditsButton = Instance.new("TextButton")
    CreditsButton.Name = "CreditsButton"
    CreditsButton.BackgroundTransparency = 1
    CreditsButton.Position = UDim2.new(1, -70, 0, 0)
    CreditsButton.Size = UDim2.new(0, 35, 1, 0)
    CreditsButton.Font = Enum.Font.GothamBold
    CreditsButton.Text = "ℹ"
    CreditsButton.TextColor3 = Theme.Text
    CreditsButton.TextSize = 18
    CreditsButton.ZIndex = 3
    CreditsButton.Parent = TopBar
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.BackgroundTransparency = 1
    CloseButton.Position = UDim2.new(1, -35, 0, 0)
    CloseButton.Size = UDim2.new(0, 35, 1, 0)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Text = "×"
    CloseButton.TextColor3 = Theme.Text
    CloseButton.TextSize = 20
    CloseButton.ZIndex = 3
    CloseButton.Parent = TopBar
    
    local CreditsFrame = Instance.new("Frame")
    CreditsFrame.Name = "CreditsFrame"
    CreditsFrame.BackgroundColor3 = Theme.Background
    CreditsFrame.BorderSizePixel = 0
    CreditsFrame.Position = UDim2.new(0.5, -125, 0.5, -75)
    CreditsFrame.Size = UDim2.new(0, 250, 0, 150)
    CreditsFrame.Visible = false
    CreditsFrame.ZIndex = 100
    CreditsFrame.Parent = ScreenGui
    
    CreateShadow(CreditsFrame)
    CreateStroke(CreditsFrame)
    CreateCorner(CreditsFrame)
    
    local CreditsTopBar = Instance.new("Frame")
    CreditsTopBar.Name = "CreditsTopBar"
    CreditsTopBar.BackgroundColor3 = Theme.Dark
    CreditsTopBar.BorderSizePixel = 0
    CreditsTopBar.Size = UDim2.new(1, 0, 0, 30)
    CreditsTopBar.ZIndex = 101
    CreditsTopBar.Parent = CreditsFrame
    
    local CreditsTitle = Instance.new("TextLabel")
    CreditsTitle.Name = "CreditsTitle"
    CreditsTitle.BackgroundTransparency = 1
    CreditsTitle.Size = UDim2.new(1, -30, 1, 0)
    CreditsTitle.Font = Enum.Font.GothamSemibold
    CreditsTitle.Text = "Credits"
    CreditsTitle.TextColor3 = Theme.Text
    CreditsTitle.TextSize = 14
    CreditsTitle.TextXAlignment = Enum.TextXAlignment.Left
    CreditsTitle.Position = UDim2.new(0, 10, 0, 0)
    CreditsTitle.ZIndex = 102
    CreditsTitle.Parent = CreditsTopBar
    
    local CreditsClose = Instance.new("TextButton")
    CreditsClose.Name = "CreditsClose"
    CreditsClose.BackgroundTransparency = 1
    CreditsClose.Position = UDim2.new(1, -30, 0, 0)
    CreditsClose.Size = UDim2.new(0, 30, 1, 0)
    CreditsClose.Font = Enum.Font.GothamBold
    CreditsClose.Text = "×"
    CreditsClose.TextColor3 = Theme.Text
    CreditsClose.TextSize = 16
    CreditsClose.ZIndex = 102
    CreditsClose.Parent = CreditsTopBar
    
    local CreditsContent = Instance.new("Frame")
    CreditsContent.Name = "CreditsContent"
    CreditsContent.BackgroundTransparency = 1
    CreditsContent.Position = UDim2.new(0, 0, 0, 30)
    CreditsContent.Size = UDim2.new(1, 0, 1, -30)
    CreditsContent.ZIndex = 101
    CreditsContent.Parent = CreditsFrame
    
    local MadeBy = Instance.new("TextLabel")
    MadeBy.Name = "MadeBy"
    MadeBy.BackgroundTransparency = 1
    MadeBy.Position = UDim2.new(0, 15, 0, 20)
    MadeBy.Size = UDim2.new(1, -30, 0, 50)
    MadeBy.Font = Enum.Font.Gotham
    MadeBy.Text = "Made By Axom\nreal name : Adam Owaissi"
    MadeBy.TextColor3 = Theme.Text
    MadeBy.TextSize = 13
    MadeBy.TextYAlignment = Enum.TextYAlignment.Top
    MadeBy.ZIndex = 102
    MadeBy.Parent = CreditsContent
    
    local YTButton = Instance.new("TextButton")
    YTButton.Name = "YTButton"
    YTButton.BackgroundColor3 = Theme.Primary
    YTButton.BorderSizePixel = 0
    YTButton.Position = UDim2.new(0.5, -45, 1, -40)
    YTButton.Size = UDim2.new(0, 90, 0, 30)
    YTButton.Font = Enum.Font.GothamSemibold
    YTButton.Text = "YouTube"
    YTButton.TextColor3 = Theme.Text
    YTButton.TextSize = 13
    YTButton.ZIndex = 102
    YTButton.Parent = CreditsContent
    
    CreateStroke(YTButton)
    CreateCorner(YTButton)
    
    local SectionsContainer = Instance.new("ScrollingFrame")
    SectionsContainer.Name = "SectionsContainer"
    SectionsContainer.BackgroundTransparency = 1
    SectionsContainer.BorderSizePixel = 0
    SectionsContainer.Position = UDim2.new(0, 0, 0, 40)
    SectionsContainer.Size = UDim2.new(1, 0, 0, 60)
    SectionsContainer.CanvasSize = UDim2.new(0, 0, 0, 0)
    SectionsContainer.ScrollBarThickness = 3
    SectionsContainer.ScrollBarImageColor3 = Theme.Primary
    SectionsContainer.ZIndex = 2
    SectionsContainer.Parent = MainFrame
    
    local SectionsList = Instance.new("UIListLayout")
    SectionsList.Padding = UDim.new(0, 8)
    SectionsList.FillDirection = Enum.FillDirection.Horizontal
    SectionsList.Parent = SectionsContainer
    
    local SectionsPadding = Instance.new("UIPadding")
    SectionsPadding.PaddingTop = UDim.new(0, 10)
    SectionsPadding.PaddingLeft = UDim.new(0, 10)
    SectionsPadding.PaddingRight = UDim.new(0, 10)
    SectionsPadding.Parent = SectionsContainer
    
    local ContentContainer = Instance.new("ScrollingFrame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.BackgroundTransparency = 1
    ContentContainer.BorderSizePixel = 0
    ContentContainer.Position = UDim2.new(0, 0, 0, 100)
    ContentContainer.Size = UDim2.new(1, 0, 1, -100)
    ContentContainer.CanvasSize = UDim2.new(0, 0, 0, 0)
    ContentContainer.ScrollBarThickness = 4
    ContentContainer.ScrollBarImageColor3 = Theme.Primary
    ContentContainer.ScrollBarImageTransparency = 0.7
    ContentContainer.ZIndex = 2
    ContentContainer.Parent = MainFrame
    
    local ContentList = Instance.new("UIListLayout")
    ContentList.Padding = UDim.new(0, 8)
    ContentList.Parent = ContentContainer
    
    local ContentPadding = Instance.new("UIPadding")
    ContentPadding.PaddingLeft = UDim.new(0, 10)
    ContentPadding.PaddingRight = UDim.new(0, 10)
    ContentPadding.PaddingTop = UDim.new(0, 10)
    ContentPadding.PaddingBottom = UDim.new(0, 10)
    ContentPadding.Parent = ContentContainer
    
    task.delay(2, function()
        Tween(LoadingFrame, {Size = UDim2.new(0, 0, 0, 0)}, 0.5)
        task.wait(0.5)
        LoadingFrame.Visible = false
        
        MainFrame.Visible = true
        MainFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
        Tween(MainFrame, {Size = UDim2.new(0, 500, 0, 550)}, 0.5, Enum.EasingStyle.Back)
    end)
    
    local dragging = false
    local dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    local function onInputBegan(input, processed)
        if processed then return end
        
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            local connection
            connection = input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                    connection:Disconnect()
                end
            end)
        end
    end

    local function onInputChanged(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end

    TopBar.InputBegan:Connect(function(input, processed)
        onInputBegan(input, processed)
    end)

    TopBar.InputChanged:Connect(onInputChanged)

    UserInputService.InputChanged:Connect(function(input)
        if (input == dragInput) and dragging then
            update(input)
        end
    end)

    CreditsButton.MouseButton1Click:Connect(function()
        CreditsFrame.Visible = true
        CreditsFrame.Size = UDim2.new(0, 0, 0, 0)
        Tween(CreditsFrame, {Size = UDim2.new(0, 250, 0, 150)}, 0.3, Enum.EasingStyle.Back)
    end)

    CreditsClose.MouseButton1Click:Connect(function()
        Tween(CreditsFrame, {Size = UDim2.new(0, 0, 0, 0)}, 0.3, Enum.EasingStyle.Back)
        wait(0.3)
        CreditsFrame.Visible = false
    end)

    YTButton.MouseButton1Click:Connect(function()
        setclipboard("https://youtube.com/@axos0022")
        Tween(YTButton, {BackgroundColor3 = Theme.Success}, 0.2)
        YTButton.Text = "Copied!"
        wait(1)
        YTButton.Text = "YouTube"
        Tween(YTButton, {BackgroundColor3 = Theme.Primary}, 0.2)
    end)

    CreditsButton.MouseEnter:Connect(function()
        Tween(CreditsButton, {TextColor3 = Theme.Primary}, 0.2)
    end)

    CreditsButton.MouseLeave:Connect(function()
        Tween(CreditsButton, {TextColor3 = Theme.Text}, 0.2)
    end)

    CloseButton.MouseEnter:Connect(function()
        Tween(CloseButton, {TextColor3 = Theme.Error}, 0.2)
    end)

    CloseButton.MouseLeave:Connect(function()
        Tween(CloseButton, {TextColor3 = Theme.Text}, 0.2)
    end)

    CloseButton.MouseButton1Click:Connect(function()
        Tween(MainFrame, {Size = UDim2.new(0, 0, 0, 0)}, 0.3, Enum.EasingStyle.Back)
        wait(0.3)
        ScreenGui:Destroy()
    end)

    local function updateContentSize()
        if Window.CurrentSection and Window.CurrentSection.ContentFrame then
            local totalHeight = 0
            for _, element in pairs(Window.CurrentSection.ContentFrame:GetChildren()) do
                if element:IsA("Frame") then
                    totalHeight = totalHeight + element.Size.Y.Offset + ContentList.Padding.Offset
                end
            end
            ContentContainer.CanvasSize = UDim2.new(0, 0, 0, totalHeight + 50)
        end
    end

    ContentList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateContentSize)

    SectionsList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        SectionsContainer.CanvasSize = UDim2.new(0, SectionsList.AbsoluteContentSize.X + 20, 0, 0)
    end)

    function Window:MakeSection(name)
        local Section = {}
        Section.Name = name
        Section.Elements = {}
        
        local SectionButton = Instance.new("TextButton")
        SectionButton.Name = name .. "Button"
        SectionButton.BackgroundColor3 = Theme.Secondary
        SectionButton.BorderSizePixel = 0
        SectionButton.Size = UDim2.new(0, 80, 0, 35)
        SectionButton.Font = Enum.Font.GothamSemibold
        SectionButton.Text = name
        SectionButton.TextColor3 = Theme.Text
        SectionButton.TextSize = 12
        SectionButton.TextWrapped = true
        SectionButton.ZIndex = 3
        SectionButton.Parent = SectionsContainer
        
        CreateStroke(SectionButton)
        CreateCorner(SectionButton)
        
        local SectionFrame = Instance.new("Frame")
        SectionFrame.Name = name .. "Frame"
        SectionFrame.BackgroundTransparency = 1
        SectionFrame.Size = UDim2.new(1, 0, 0, 0)
        SectionFrame.AutomaticSize = Enum.AutomaticSize.Y
        SectionFrame.Visible = false
        SectionFrame.ZIndex = 2
        SectionFrame.Parent = ContentContainer
        
        local SectionUIList = Instance.new("UIListLayout")
        SectionUIList.Padding = UDim.new(0, 8)
        SectionUIList.Parent = SectionFrame
        
        SectionUIList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            if SectionFrame.Visible then
                updateContentSize()
            end
        end)
        
        Section.ContentFrame = SectionFrame
        Section.Button = SectionButton
        
        local function activateSection()
            if Window.CurrentSection then
                Window.CurrentSection.ContentFrame.Visible = false
                Tween(Window.CurrentSection.Button, {BackgroundColor3 = Theme.Secondary}, 0.2)
                Tween(Window.CurrentSection.Button, {TextColor3 = Theme.Text}, 0.2)
            end
            
            Window.CurrentSection = Section
            SectionFrame.Visible = true
            Tween(SectionButton, {BackgroundColor3 = Theme.Primary}, 0.2)
            Tween(SectionButton, {TextColor3 = Theme.Background}, 0.2)
            
            updateContentSize()
        end
        
        SectionButton.MouseButton1Click:Connect(activateSection)
        
        if #Window.Sections == 0 then
            activateSection()
        end
        
        table.insert(Window.Sections, Section)
        
        function Section:MakeButton(name, callback)
            local ButtonFrame = Instance.new("Frame")
            ButtonFrame.Name = "ButtonFrame"
            ButtonFrame.BackgroundColor3 = Theme.Secondary
            ButtonFrame.BorderSizePixel = 0
            ButtonFrame.Size = UDim2.new(1, 0, 0, 35)
            ButtonFrame.ZIndex = 3
            ButtonFrame.Parent = SectionFrame
            
            CreateStroke(ButtonFrame)
            CreateCorner(ButtonFrame)
            
            local Button = Instance.new("TextButton")
            Button.Name = "Button"
            Button.BackgroundTransparency = 1
            Button.Size = UDim2.new(1, 0, 1, 0)
            Button.Font = Enum.Font.GothamSemibold
            Button.Text = string.upper(name)
            Button.TextColor3 = Theme.Text
            Button.TextSize = 13
            Button.ZIndex = 4
            Button.Parent = ButtonFrame
            
            Button.MouseButton1Click:Connect(function()
                Tween(ButtonFrame, {BackgroundColor3 = Theme.Primary}, 0.1)
                Tween(Button, {TextColor3 = Theme.Background}, 0.1)
                if callback then
                    callback()
                end
                wait(0.1)
                Tween(ButtonFrame, {BackgroundColor3 = Theme.Secondary}, 0.2)
                Tween(Button, {TextColor3 = Theme.Text}, 0.2)
            end)
            
            Button.MouseEnter:Connect(function()
                Tween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(55, 55, 65)}, 0.2)
            end)
            
            Button.MouseLeave:Connect(function()
                Tween(ButtonFrame, {BackgroundColor3 = Theme.Secondary}, 0.2)
            end)
            
            table.insert(Section.Elements, ButtonFrame)
            return ButtonFrame
        end

        function Section:MakeToggle(name, default, callback)
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Name = "ToggleFrame"
            ToggleFrame.BackgroundColor3 = Theme.Secondary
            ToggleFrame.BorderSizePixel = 0
            ToggleFrame.Size = UDim2.new(1, 0, 0, 30)
            ToggleFrame.ZIndex = 3
            ToggleFrame.Parent = SectionFrame
            
            CreateStroke(ToggleFrame)
            CreateCorner(ToggleFrame)
            
            local ToggleLabel = Instance.new("TextLabel")
            ToggleLabel.Name = "ToggleLabel"
            ToggleLabel.BackgroundTransparency = 1
            ToggleLabel.Position = UDim2.new(0, 12, 0, 0)
            ToggleLabel.Size = UDim2.new(0, 200, 1, 0)
            ToggleLabel.Font = Enum.Font.Gotham
            ToggleLabel.Text = name
            ToggleLabel.TextColor3 = Theme.Text
            ToggleLabel.TextSize = 13
            ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            ToggleLabel.ZIndex = 4
            ToggleLabel.Parent = ToggleFrame
            
            local ToggleButton = Instance.new("Frame")
            ToggleButton.Name = "ToggleButton"
            ToggleButton.BackgroundColor3 = Theme.Background
            ToggleButton.BorderSizePixel = 0
            ToggleButton.Position = UDim2.new(1, -42, 0.5, -10)
            ToggleButton.Size = UDim2.new(0, 40, 0, 20)
            ToggleButton.ZIndex = 4
            ToggleButton.Parent = ToggleFrame
            
            CreateStroke(ToggleButton)
            CreateCorner(ToggleButton, UDim.new(0, 10))
            
            local ToggleInner = Instance.new("Frame")
            ToggleInner.Name = "ToggleInner"
            ToggleInner.BackgroundColor3 = Theme.Text
            ToggleInner.BorderSizePixel = 0
            ToggleInner.Position = UDim2.new(0, 2, 0.5, -8)
            ToggleInner.Size = UDim2.new(0, 16, 0, 16)
            ToggleInner.ZIndex = 5
            ToggleInner.Parent = ToggleButton
            
            CreateCorner(ToggleInner, UDim.new(0, 8))
            
            local state = default or false
            
            local function updateToggle()
                if state then
                    Tween(ToggleButton, {BackgroundColor3 = Theme.Primary}, 0.2)
                    Tween(ToggleInner, {Position = UDim2.new(1, -18, 0.5, -8)}, 0.2)
                else
                    Tween(ToggleButton, {BackgroundColor3 = Theme.Background}, 0.2)
                    Tween(ToggleInner, {Position = UDim2.new(0, 2, 0.5, -8)}, 0.2)
                end
            end
            
            ToggleButton.InputBegan:Connect(function(input, processed)
                if processed then return end
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    state = not state
                    updateToggle()
                    if callback then
                        callback(state)
                    end
                end
            end)
            
            updateToggle()
            
            table.insert(Section.Elements, ToggleFrame)
            return ToggleFrame
        end

        function Section:MakeBox(name, placeholder, callback)
            local BoxFrame = Instance.new("Frame")
            BoxFrame.Name = "BoxFrame"
            BoxFrame.BackgroundColor3 = Theme.Secondary
            BoxFrame.BorderSizePixel = 0
            BoxFrame.Size = UDim2.new(1, 0, 0, 30)
            BoxFrame.ZIndex = 3
            BoxFrame.Parent = SectionFrame
            
            CreateStroke(BoxFrame)
            CreateCorner(BoxFrame)
            
            local BoxLabel = Instance.new("TextLabel")
            BoxLabel.Name = "BoxLabel"
            BoxLabel.BackgroundTransparency = 1
            BoxLabel.Position = UDim2.new(0, 12, 0, 0)
            BoxLabel.Size = UDim2.new(0, 120, 1, 0)
            BoxLabel.Font = Enum.Font.Gotham
            BoxLabel.Text = name
            BoxLabel.TextColor3 = Theme.Text
            BoxLabel.TextSize = 13
            BoxLabel.TextXAlignment = Enum.TextXAlignment.Left
            BoxLabel.ZIndex = 4
            BoxLabel.Parent = BoxFrame
            
            local TextBox = Instance.new("TextBox")
            TextBox.Name = "TextBox"
            TextBox.BackgroundColor3 = Theme.Background
            TextBox.BorderSizePixel = 0
            TextBox.Position = UDim2.new(0, 140, 0, 5)
            TextBox.Size = UDim2.new(1, -152, 1, -10)
            TextBox.Font = Enum.Font.Gotham
            TextBox.PlaceholderText = placeholder or ""
            TextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
            TextBox.Text = ""
            TextBox.TextColor3 = Theme.Text
            TextBox.TextSize = 13
            TextBox.ZIndex = 4
            TextBox.Parent = BoxFrame
            
            CreateStroke(TextBox)
            CreateCorner(TextBox)
            
            TextBox.FocusLost:Connect(function(enterPressed)
                if callback then
                    callback(TextBox.Text, enterPressed)
                end
            end)
            
            table.insert(Section.Elements, BoxFrame)
            return BoxFrame
        end

        function Section:MakeSlider(name, min, max, default, callback)
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Name = "SliderFrame"
            SliderFrame.BackgroundColor3 = Theme.Secondary
            SliderFrame.BorderSizePixel = 0
            SliderFrame.Size = UDim2.new(1, 0, 0, 50)
            SliderFrame.ZIndex = 3
            SliderFrame.Parent = SectionFrame
            
            CreateStroke(SliderFrame)
            CreateCorner(SliderFrame)
            
            local SliderLabel = Instance.new("TextLabel")
            SliderLabel.Name = "SliderLabel"
            SliderLabel.BackgroundTransparency = 1
            SliderLabel.Position = UDim2.new(0, 12, 0, 5)
            SliderLabel.Size = UDim2.new(1, -24, 0, 15)
            SliderLabel.Font = Enum.Font.Gotham
            SliderLabel.Text = name
            SliderLabel.TextColor3 = Theme.Text
            SliderLabel.TextSize = 13
            SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            SliderLabel.ZIndex = 4
            SliderLabel.Parent = SliderFrame
            
            local SliderValue = Instance.new("TextLabel")
            SliderValue.Name = "SliderValue"
            SliderValue.BackgroundTransparency = 1
            SliderValue.Position = UDim2.new(1, -60, 0, 5)
            SliderValue.Size = UDim2.new(0, 50, 0, 15)
            SliderValue.Font = Enum.Font.Gotham
            SliderValue.Text = tostring(default or min)
            SliderValue.TextColor3 = Theme.Primary
            SliderValue.TextSize = 13
            SliderValue.TextXAlignment = Enum.TextXAlignment.Right
            SliderValue.ZIndex = 4
            SliderValue.Parent = SliderFrame
            
            local SliderTrack = Instance.new("Frame")
            SliderTrack.Name = "SliderTrack"
            SliderTrack.BackgroundColor3 = Theme.Background
            SliderTrack.BorderSizePixel = 0
            SliderTrack.Position = UDim2.new(0, 12, 0, 30)
            SliderTrack.Size = UDim2.new(1, -24, 0, 6)
            SliderTrack.ZIndex = 4
            SliderTrack.Parent = SliderFrame
            
            CreateStroke(SliderTrack)
            CreateCorner(SliderTrack, UDim.new(0, 3))
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Name = "SliderFill"
            SliderFill.BackgroundColor3 = Theme.Primary
            SliderFill.BorderSizePixel = 0
            SliderFill.Size = UDim2.new(0, 0, 1, 0)
            SliderFill.ZIndex = 5
            SliderFill.Parent = SliderTrack
            
            CreateCorner(SliderFill, UDim.new(0, 3))
            
            local SliderButton = Instance.new("TextButton")
            SliderButton.Name = "SliderButton"
            SliderButton.BackgroundColor3 = Theme.Text
            SliderButton.BorderSizePixel = 0
            SliderButton.Position = UDim2.new(0, -6, 0, -4)
            SliderButton.Size = UDim2.new(0, 14, 0, 14)
            SliderButton.Text = ""
            SliderButton.ZIndex = 6
            SliderButton.Parent = SliderFill
            
            CreateCorner(SliderButton, UDim.new(0, 7))
            
            local value = math.clamp(default or min, min, max)
            local sliding = false
            
            local function updateSlider(newValue)
                value = math.clamp(newValue, min, max)
                local percent = (value - min) / (max - min)
                SliderFill.Size = UDim2.new(percent, 0, 1, 0)
                SliderValue.Text = tostring(math.floor(value))
                if callback then
                    callback(value)
                end
            end
            
            SliderButton.InputBegan:Connect(function(input, processed)
                if processed then return end
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    sliding = true
                end
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    sliding = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if sliding and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                    local mousePos = UserInputService:GetMouseLocation()
                    local trackPos = SliderTrack.AbsolutePosition
                    local trackSize = SliderTrack.AbsoluteSize
                    local relativeX = (mousePos.X - trackPos.X) / trackSize.X
                    relativeX = math.clamp(relativeX, 0, 1)
                    local newValue = min + (max - min) * relativeX
                    updateSlider(newValue)
                end
            end)
            
            updateSlider(value)
            
            table.insert(Section.Elements, SliderFrame)
            return SliderFrame
        end

        function Section:MakeDropdown(name, options, callback)
            options = options or {"Option 1", "Option 2", "Option 3"}
            
            local DropdownFrame = Instance.new("Frame")
            DropdownFrame.Name = "DropdownFrame"
            DropdownFrame.BackgroundColor3 = Theme.Secondary
            DropdownFrame.BorderSizePixel = 0
            DropdownFrame.Size = UDim2.new(1, 0, 0, 30)
            DropdownFrame.ZIndex = 3
            DropdownFrame.Parent = SectionFrame
            
            CreateStroke(DropdownFrame)
            CreateCorner(DropdownFrame)
            
            local DropdownLabel = Instance.new("TextLabel")
            DropdownLabel.Name = "DropdownLabel"
            DropdownLabel.BackgroundTransparency = 1
            DropdownLabel.Position = UDim2.new(0, 12, 0, 0)
            DropdownLabel.Size = UDim2.new(0, 150, 1, 0)
            DropdownLabel.Font = Enum.Font.Gotham
            DropdownLabel.Text = name
            DropdownLabel.TextColor3 = Theme.Text
            DropdownLabel.TextSize = 13
            DropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
            DropdownLabel.ZIndex = 4
            DropdownLabel.Parent = DropdownFrame
            
            local DropdownButton = Instance.new("TextButton")
            DropdownButton.Name = "DropdownButton"
            DropdownButton.BackgroundColor3 = Theme.Background
            DropdownButton.BorderSizePixel = 0
            DropdownButton.Position = UDim2.new(1, -112, 0, 5)
            DropdownButton.Size = UDim2.new(0, 100, 1, -10)
            DropdownButton.Font = Enum.Font.Gotham
            DropdownButton.Text = "Select..."
            DropdownButton.TextColor3 = Theme.Text
            DropdownButton.TextSize = 12
            DropdownButton.ZIndex = 4
            DropdownButton.Parent = DropdownFrame
            
            CreateStroke(DropdownButton)
            CreateCorner(DropdownButton)
            
            local DropdownList = Instance.new("ScrollingFrame")
            DropdownList.Name = "DropdownList"
            DropdownList.BackgroundColor3 = Theme.Background
            DropdownList.BorderSizePixel = 0
            DropdownList.Position = UDim2.new(0, 0, 0, 0)
            DropdownList.Size = UDim2.new(0, 0, 0, 120)
            DropdownList.CanvasSize = UDim2.new(0, 0, 0, 0)
            DropdownList.ScrollBarThickness = 4
            DropdownList.ScrollBarImageColor3 = Theme.Primary
            DropdownList.Visible = false
            DropdownList.ZIndex = 50
            DropdownList.Parent = ScreenGui
            
            CreateStroke(DropdownList)
            CreateCorner(DropdownList)
            
            local ListLayout = Instance.new("UIListLayout")
            ListLayout.Padding = UDim.new(0, 5)
            ListLayout.Parent = DropdownList
            
            local open = false
            
            local function updateList()
                DropdownList:ClearAllChildren()
                
                for i, option in pairs(options) do
                    local OptionButton = Instance.new("TextButton")
                    OptionButton.Name = "OptionButton"
                    OptionButton.BackgroundColor3 = Theme.Secondary
                    OptionButton.BorderSizePixel = 0
                    OptionButton.Size = UDim2.new(1, -10, 0, 25)
                    OptionButton.Position = UDim2.new(0, 5, 0, (i-1)*30)
                    OptionButton.Font = Enum.Font.Gotham
                    OptionButton.Text = option
                    OptionButton.TextColor3 = Theme.Text
                    OptionButton.TextSize = 12
                    OptionButton.ZIndex = 51
                    OptionButton.Parent = DropdownList
                    
                    CreateStroke(OptionButton)
                    CreateCorner(OptionButton)
                    
                    OptionButton.MouseButton1Click:Connect(function()
                        DropdownButton.Text = option
                        open = false
                        DropdownList.Visible = false
                        if callback then
                            callback(option)
                        end
                    end)
                    
                    OptionButton.MouseEnter:Connect(function()
                        Tween(OptionButton, {BackgroundColor3 = Color3.fromRGB(55, 55, 65)}, 0.2)
                    end)
                    
                    OptionButton.MouseLeave:Connect(function()
                        Tween(OptionButton, {BackgroundColor3 = Theme.Secondary}, 0.2)
                    end)
                end
                
                DropdownList.CanvasSize = UDim2.new(0, 0, 0, #options * 30)
            end
            
            DropdownButton.MouseButton1Click:Connect(function()
                open = not open
                if open then
                    updateList()
                    local buttonPos = DropdownButton.AbsolutePosition
                    local buttonSize = DropdownButton.AbsoluteSize
                    DropdownList.Position = UDim2.new(0, buttonPos.X, 0, buttonPos.Y + buttonSize.Y + 5)
                    DropdownList.Size = UDim2.new(0, buttonSize.X, 0, 120)
                    DropdownList.Visible = true
                else
                    DropdownList.Visible = false
                end
            end)
            
            table.insert(Section.Elements, DropdownFrame)
            return DropdownFrame
        end

        function Section:MakePlayerSelector(callback)
            local PlayerFrame = Instance.new("Frame")
            PlayerFrame.Name = "PlayerFrame"
            PlayerFrame.BackgroundColor3 = Theme.Secondary
            PlayerFrame.BorderSizePixel = 0
            PlayerFrame.Size = UDim2.new(1, 0, 0, 30)
            PlayerFrame.ZIndex = 3
            PlayerFrame.Parent = SectionFrame
            
            CreateStroke(PlayerFrame)
            CreateCorner(PlayerFrame)
            
            local PlayerLabel = Instance.new("TextLabel")
            PlayerLabel.Name = "PlayerLabel"
            PlayerLabel.BackgroundTransparency = 1
            PlayerLabel.Position = UDim2.new(0, 12, 0, 0)
            PlayerLabel.Size = UDim2.new(0, 120, 1, 0)
            PlayerLabel.Font = Enum.Font.Gotham
            PlayerLabel.Text = "Select Player"
            PlayerLabel.TextColor3 = Theme.Text
            PlayerLabel.TextSize = 13
            PlayerLabel.TextXAlignment = Enum.TextXAlignment.Left
            PlayerLabel.ZIndex = 4
            PlayerLabel.Parent = PlayerFrame
            
            local PlayerButton = Instance.new("TextButton")
            PlayerButton.Name = "PlayerButton"
            PlayerButton.BackgroundColor3 = Theme.Background
            PlayerButton.BorderSizePixel = 0
            PlayerButton.Position = UDim2.new(1, -112, 0, 5)
            PlayerButton.Size = UDim2.new(0, 100, 1, -10)
            PlayerButton.Font = Enum.Font.Gotham
            PlayerButton.Text = "Select..."
            PlayerButton.TextColor3 = Theme.Text
            PlayerButton.TextSize = 12
            PlayerButton.ZIndex = 4
            PlayerButton.Parent = PlayerFrame
            
            CreateStroke(PlayerButton)
            CreateCorner(PlayerButton)
            
            local PlayerList = Instance.new("ScrollingFrame")
            PlayerList.Name = "PlayerList"
            PlayerList.BackgroundColor3 = Theme.Background
            PlayerList.BorderSizePixel = 0
            PlayerList.Position = UDim2.new(0, 0, 0, 0)
            PlayerList.Size = UDim2.new(0, 0, 0, 120)
            PlayerList.CanvasSize = UDim2.new(0, 0, 0, 0)
            PlayerList.ScrollBarThickness = 4
            PlayerList.ScrollBarImageColor3 = Theme.Primary
            PlayerList.Visible = false
            PlayerList.ZIndex = 50
            PlayerList.Parent = ScreenGui
            
            CreateStroke(PlayerList)
            CreateCorner(PlayerList)
            
            local ListLayout = Instance.new("UIListLayout")
            ListLayout.Padding = UDim.new(0, 5)
            ListLayout.Parent = PlayerList
            
            local open = false
            
            local function updatePlayerList()
                PlayerList:ClearAllChildren()
                local players = Players:GetPlayers()
                
                for i, player in pairs(players) do
                    local PlayerOption = Instance.new("TextButton")
                    PlayerOption.Name = "PlayerOption"
                    PlayerOption.BackgroundColor3 = Theme.Secondary
                    PlayerOption.BorderSizePixel = 0
                    PlayerOption.Size = UDim2.new(1, -10, 0, 25)
                    PlayerOption.Position = UDim2.new(0, 5, 0, (i-1)*30)
                    PlayerOption.Font = Enum.Font.Gotham
                    PlayerOption.Text = player.Name
                    PlayerOption.TextColor3 = Theme.Text
                    PlayerOption.TextSize = 12
                    PlayerOption.ZIndex = 51
                    PlayerOption.Parent = PlayerList
                    
                    CreateStroke(PlayerOption)
                    CreateCorner(PlayerOption)
                    
                    PlayerOption.MouseButton1Click:Connect(function()
                        PlayerButton.Text = player.Name
                        open = false
                        PlayerList.Visible = false
                        if callback then
                            callback(player)
                        end
                    end)
                    
                    PlayerOption.MouseEnter:Connect(function()
                        Tween(PlayerOption, {BackgroundColor3 = Color3.fromRGB(55, 55, 65)}, 0.2)
                    end)
                    
                    PlayerOption.MouseLeave:Connect(function()
                        Tween(PlayerOption, {BackgroundColor3 = Theme.Secondary}, 0.2)
                    end)
                end
                
                PlayerList.CanvasSize = UDim2.new(0, 0, 0, #players * 30)
            end
            
            PlayerButton.MouseButton1Click:Connect(function()
                open = not open
                if open then
                    updatePlayerList()
                    local buttonPos = PlayerButton.AbsolutePosition
                    local buttonSize = PlayerButton.AbsoluteSize
                    PlayerList.Position = UDim2.new(0, buttonPos.X, 0, buttonPos.Y + buttonSize.Y + 5)
                    PlayerList.Size = UDim2.new(0, buttonSize.X, 0, 120)
                    PlayerList.Visible = true
                else
                    PlayerList.Visible = false
                end
            end)
            
            Players.PlayerAdded:Connect(updatePlayerList)
            Players.PlayerRemoving:Connect(updatePlayerList)
            
            table.insert(Section.Elements, PlayerFrame)
            return PlayerFrame
        end

        function Section:MakeColorPicker(name, default, callback)
            default = default or Theme.Primary
            
            local ColorFrame = Instance.new("Frame")
            ColorFrame.Name = "ColorFrame"
            ColorFrame.BackgroundColor3 = Theme.Secondary
            ColorFrame.BorderSizePixel = 0
            ColorFrame.Size = UDim2.new(1, 0, 0, 30)
            ColorFrame.ZIndex = 3
            ColorFrame.Parent = SectionFrame
            
            CreateStroke(ColorFrame)
            CreateCorner(ColorFrame)
            
            local ColorLabel = Instance.new("TextLabel")
            ColorLabel.Name = "ColorLabel"
            ColorLabel.BackgroundTransparency = 1
            ColorLabel.Position = UDim2.new(0, 12, 0, 0)
            ColorLabel.Size = UDim2.new(0, 150, 1, 0)
            ColorLabel.Font = Enum.Font.Gotham
            ColorLabel.Text = name
            ColorLabel.TextColor3 = Theme.Text
            ColorLabel.TextSize = 13
            ColorLabel.TextXAlignment = Enum.TextXAlignment.Left
            ColorLabel.ZIndex = 4
            ColorLabel.Parent = ColorFrame
            
            local ColorButton = Instance.new("TextButton")
            ColorButton.Name = "ColorButton"
            ColorButton.BackgroundColor3 = default
            ColorButton.BorderSizePixel = 0
            ColorButton.Position = UDim2.new(1, -42, 0.5, -10)
            ColorButton.Size = UDim2.new(0, 30, 0, 20)
            ColorButton.Text = ""
            ColorButton.ZIndex = 4
            ColorButton.Parent = ColorFrame
            
            CreateStroke(ColorButton)
            CreateCorner(ColorButton)
            
            local ColorPicker = Instance.new("ScrollingFrame")
            ColorPicker.Name = "ColorPicker"
            ColorPicker.BackgroundColor3 = Theme.Background
            ColorPicker.BorderSizePixel = 0
            ColorPicker.Position = UDim2.new(0, 0, 0, 0)
            ColorPicker.Size = UDim2.new(0, 0, 0, 120)
            ColorPicker.CanvasSize = UDim2.new(0, 0, 0, 0)
            ColorPicker.ScrollBarThickness = 4
            ColorPicker.ScrollBarImageColor3 = Theme.Primary
            ColorPicker.Visible = false
            ColorPicker.ZIndex = 50
            ColorPicker.Parent = ScreenGui
            
            CreateStroke(ColorPicker)
            CreateCorner(ColorPicker)
            
            local ColorGrid = Instance.new("UIGridLayout")
            ColorGrid.CellPadding = UDim2.new(0, 5, 0, 5)
            ColorGrid.CellSize = UDim2.new(0, 25, 0, 25)
            ColorGrid.StartCorner = Enum.StartCorner.TopLeft
            ColorGrid.Parent = ColorPicker
            
            local open = false
            
            local function generateAllColors()
                local colors = {}
                for r = 0, 7 do
                    for g = 0, 7 do
                        for b = 0, 7 do
                            local color = Color3.fromRGB(
                                math.floor(r * 255 / 7),
                                math.floor(g * 255 / 7), 
                                math.floor(b * 255 / 7)
                            )
                            table.insert(colors, color)
                        end
                    end
                end
                return colors
            end
            
            local colors = generateAllColors()
            
            local function updateColorPicker()
                ColorPicker:ClearAllChildren()
                
                for i, color in pairs(colors) do
                    local ColorOption = Instance.new("TextButton")
                    ColorOption.Name = "ColorOption"
                    ColorOption.BackgroundColor3 = color
                    ColorOption.BorderSizePixel = 0
                    ColorOption.Size = UDim2.new(0, 25, 0, 25)
                    ColorOption.Text = ""
                    ColorOption.ZIndex = 51
                    ColorOption.Parent = ColorPicker
                    
                    CreateStroke(ColorOption)
                    CreateCorner(ColorOption)
                    
                    ColorOption.MouseButton1Click:Connect(function()
                        ColorButton.BackgroundColor3 = color
                        open = false
                        ColorPicker.Visible = false
                        if callback then
                            callback(color)
                        end
                    end)
                end
                
                ColorPicker.CanvasSize = UDim2.new(0, 150, 0, math.ceil(#colors / 6) * 30)
            end
            
            ColorButton.MouseButton1Click:Connect(function()
                open = not open
                if open then
                    updateColorPicker()
                    local buttonPos = ColorButton.AbsolutePosition
                    local buttonSize = ColorButton.AbsoluteSize
                    ColorPicker.Position = UDim2.new(0, buttonPos.X, 0, buttonPos.Y + buttonSize.Y + 5)
                    ColorPicker.Size = UDim2.new(0, 150, 0, 120)
                    ColorPicker.Visible = true
                else
                    ColorPicker.Visible = false
                end
            end)
            
            table.insert(Section.Elements, ColorFrame)
            return ColorFrame
        end

        function Section:MakeNotification(title, message, duration)
            duration = duration or 5
            
            local Notification = Instance.new("Frame")
            Notification.Name = "Notification"
            Notification.BackgroundColor3 = Theme.Secondary
            Notification.BorderSizePixel = 0
            Notification.Position = UDim2.new(1, 10, 1, -120)
            Notification.Size = UDim2.new(0, 300, 0, 100)
            Notification.ZIndex = 100
            Notification.Parent = ScreenGui
            
            CreateShadow(Notification)
            CreateStroke(Notification)
            CreateCorner(Notification)
            
            local NotifTitle = Instance.new("TextLabel")
            NotifTitle.Name = "NotifTitle"
            NotifTitle.BackgroundTransparency = 1
            NotifTitle.Position = UDim2.new(0, 15, 0, 10)
            NotifTitle.Size = UDim2.new(1, -30, 0, 20)
            NotifTitle.Font = Enum.Font.GothamSemibold
            NotifTitle.Text = title
            NotifTitle.TextColor3 = Theme.Primary
            NotifTitle.TextSize = 14
            NotifTitle.TextXAlignment = Enum.TextXAlignment.Left
            NotifTitle.ZIndex = 101
            NotifTitle.Parent = Notification
            
            local NotifMessage = Instance.new("TextLabel")
            NotifMessage.Name = "NotifMessage"
            NotifMessage.BackgroundTransparency = 1
            NotifMessage.Position = UDim2.new(0, 15, 0, 35)
            NotifMessage.Size = UDim2.new(1, -30, 1, -45)
            NotifMessage.Font = Enum.Font.Gotham
            NotifMessage.Text = message
            NotifMessage.TextColor3 = Theme.Text
            NotifMessage.TextSize = 12
            NotifMessage.TextWrapped = true
            NotifMessage.TextXAlignment = Enum.TextXAlignment.Left
            NotifMessage.TextYAlignment = Enum.TextYAlignment.Top
            NotifMessage.ZIndex = 101
            NotifMessage.Parent = Notification
            
            Notification.Position = UDim2.new(1, 310, 1, -120)
            Tween(Notification, {Position = UDim2.new(1, 10, 1, -120)}, 0.3)
            
            delay(duration, function()
                Tween(Notification, {Position = UDim2.new(1, 310, 1, -120)}, 0.3)
                wait(0.3)
                Notification:Destroy()
            end)
            
            return Notification
        end

        return Section
    end

    return Window
end

return Ropoto
